// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scans Component should handle multiple display states, pending, error, fulfilled: error 1`] = `
<EmptyState
  className="quipucords-empty-state__alert"
>
  <Alert
    title="t(view.error, {\\"context\\":\\"scans\\"})"
    variant="danger"
  >
    t(view.error-message, {"context":"scans"})
  </Alert>
</EmptyState>
`;

exports[`Scans Component should handle multiple display states, pending, error, fulfilled: fulfilled 1`] = `
<div
  className="quipucords-view-container"
>
  <ViewToolbar
    actions={
      <Tooltip
        content="t(table.tooltip, {\\"context\\":\\"merge-reports\\"})"
        delayShow={500}
        id={null}
        isPopover={false}
        placement="top"
      >
        <Button
          isDisabled={true}
          onClick={[Function]}
          variant="primary"
        >
          t(table.label, {"context":"merge-reports"})
        </Button>
      </Tooltip>
    }
    activeFilters={Array []}
    filterFields={
      Array [
        Object {
          "filterType": "text",
          "id": "search_by_name",
          "placeholder": "Filter by Name",
          "title": "Name",
        },
        Object {
          "filterType": "text",
          "id": "search_sources_by_name",
          "placeholder": "Filter by Source Name",
          "title": "Source",
        },
      ]
    }
    filterType={Object {}}
    filterValue=""
    itemsType="Scan"
    itemsTypePlural="Scans"
    lastRefresh={NaN}
    onRefresh={[Function]}
    selectedCount={0}
    sortAscending={true}
    sortFields={
      Array [
        Object {
          "id": "name",
          "isNumeric": false,
          "title": "Name",
        },
        Object {
          "id": "most_recent_scanjob__start_time",
          "isNumeric": true,
          "sortAscending": false,
          "title": "Most Recent",
        },
      ]
    }
    sortType={Object {}}
    totalCount={0}
    viewType="SCANS_VIEW"
  />
  <ViewPaginationRow
    currentPage={0}
    pageSize={0}
    totalCount={0}
    viewType="SCANS_VIEW"
  />
  <div
    className="quipucords-list-container"
  >
    <Table
      ariaLabel={null}
      className=""
      columnHeaders={Array []}
      componentClassNames={
        Object {
          "table": "quipucords-table",
          "td": "quipucords-table__td",
          "tdAction": "quipucords-table__td-action",
          "tdExpand": "quipucords-table__td-expand",
          "tdExpanded": "quipucords-table__td-expand-expanded",
          "tdExpandedContent": "quipucords-table__td-expand-content",
          "tdExpandedWrapper": "quipucords-table__td-expand-wrapper",
          "tdSelect": "quipucords-table__td-select",
          "th": "quipucords-table__th",
          "tr": "quipucords-table__tr",
          "trExpand": "quipucords-table__tr-expand",
          "trExpanded": "quipucords-table__tr-expand-expanded",
          "trExpandedContent": "quipucords-table__tr-expand-content",
        }
      }
      isBorders={true}
      isHeader={false}
      onExpand={[Function]}
      onSelect={[Function]}
      onSort={null}
      rows={
        Array [
          Object {
            "cells": Array [
              Object {
                "content": <Grid
                  hasGutter={false}
                >
                  <GridItem
                    sm={2}
                  />
                  <GridItem
                    sm={10}
                  >
                    <div>
                      <strong>
                        lorem
                      </strong>
                    </div>
                  </GridItem>
                </Grid>,
                "dataLabel": "t(table.header, {\\"context\\":\\"description\\"})",
              },
              Object {
                "content": <Grid
                  hasGutter={false}
                >
                  <GridItem
                    sm={2}
                  >
                    <ContextIcon
                      size="sm"
                      symbol={null}
                    />
                  </GridItem>
                  <GridItem
                    sm={10}
                  >
                    <div>
                      t(table.label_status, {"context":"scans"})
                    </div>
                    a day ago
                  </GridItem>
                </Grid>,
                "dataLabel": "t(table.header, {\\"context\\":\\"scan\\"})",
                "width": 20,
              },
              Object {
                "content": <Tooltip
                  content="t(table.label_status_tooltip_success, {\\"context\\":\\"scans\\",\\"count\\":0})"
                  delayShow={500}
                  id={null}
                  isPopover={false}
                  placement="top"
                >
                  t(table.label_status_cell, {"context":"scans","count":0}, [object Object],[object Object])
                </Tooltip>,
                "dataLabel": "t(table.header_success, {\\"context\\":\\"scans\\"})",
                "expandedContent": undefined,
                "isExpanded": false,
                "width": 8,
              },
              Object {
                "content": <Tooltip
                  content="t(table.label_status_tooltip_failed, {\\"context\\":\\"scans\\",\\"count\\":0})"
                  delayShow={500}
                  id={null}
                  isPopover={false}
                  placement="top"
                >
                  t(table.label_status_cell, {"context":"scans","count":0}, [object Object],[object Object])
                </Tooltip>,
                "dataLabel": "t(table.header_failed, {\\"context\\":\\"scans\\"})",
                "expandedContent": undefined,
                "isExpanded": false,
                "width": 8,
              },
              Object {
                "content": <Tooltip
                  content="t(table.label_status_tooltip_sources, {\\"context\\":\\"scans\\",\\"count\\":0})"
                  delayShow={500}
                  id={null}
                  isPopover={false}
                  placement="top"
                >
                  t(table.label_status_cell, {"context":"scans","count":0}, [object Object],[object Object])
                </Tooltip>,
                "dataLabel": "t(table.header, {\\"context\\":\\"sources\\"})",
                "expandedContent": undefined,
                "isExpanded": false,
                "width": 8,
              },
              Object {
                "content": <Tooltip
                  content="t(table.label_status_tooltip_scans, {\\"context\\":\\"scans\\",\\"count\\":0})"
                  delayShow={500}
                  id={null}
                  isPopover={false}
                  placement="top"
                >
                  t(table.label_status_cell, {"context":"scans","count":0}, [object Object],[object Object])
                </Tooltip>,
                "dataLabel": "t(table.header, {\\"context\\":\\"scan-jobs\\"})",
                "expandedContent": undefined,
                "isExpanded": false,
                "width": 8,
              },
              Object {
                "content": <OverflowMenu
                  breakpoint="lg"
                >
                  <OverflowMenuContent>
                    <OverflowMenuGroup
                      groupType="button"
                    />
                  </OverflowMenuContent>
                  <OverflowMenuControl>
                    <DropdownSelect
                      ariaLabel="Select option"
                      buttonVariant="plain"
                      className=""
                      direction="down"
                      id="generatedid-"
                      isDisabled={false}
                      isDropdownButton={true}
                      isInline={true}
                      isToggleText={true}
                      maxHeight={null}
                      name={null}
                      onSelect={[Function]}
                      options={Array []}
                      placeholder={
                        <EllipsisVIcon
                          color="currentColor"
                          noVerticalAlign={false}
                          size="sm"
                        />
                      }
                      position="right"
                      selectedOptions={null}
                      splitButtonVariant={null}
                      toggleIcon={null}
                      variant="single"
                    />
                  </OverflowMenuControl>
                </OverflowMenu>,
                "isActionCell": true,
                "style": Object {
                  "textAlign": "right",
                },
              },
            ],
            "isSelected": false,
            "item": Object {
              "id": "1",
              "name": "lorem",
            },
          },
        ]
      }
      summary={null}
      variant="compact"
    >
      <ScansEmptyState
        getScansSources={[Function]}
        history={Object {}}
        sourcesCount={0}
        sourcesExist={false}
        t={[Function]}
        uiShortName="Quipucords"
        viewId="scans"
      />
    </Table>
  </div>
</div>
`;

exports[`Scans Component should handle multiple display states, pending, error, fulfilled: pending 1`] = `
<Modal
  aria-label={null}
  backdrop={false}
  className={null}
  disableFocusTrap={true}
  footer={null}
  header={null}
  isContentOnly={false}
  isOpen={true}
  position="top"
  positionOffset="5%"
  showClose={false}
  t={[Function]}
  variant="medium"
>
  <Spinner
    isSVG={true}
    size="lg"
  />
  <div
    className="text-center"
  >
    t(view.loading, {"context":"scans"})
  </div>
</Modal>
`;

exports[`Scans Component should render a basic component: basic 1`] = `
<div
  className="quipucords-view-container"
>
  <div
    className="quipucords-list-container"
  >
    <Table
      ariaLabel={null}
      className=""
      columnHeaders={Array []}
      componentClassNames={
        Object {
          "table": "quipucords-table",
          "td": "quipucords-table__td",
          "tdAction": "quipucords-table__td-action",
          "tdExpand": "quipucords-table__td-expand",
          "tdExpanded": "quipucords-table__td-expand-expanded",
          "tdExpandedContent": "quipucords-table__td-expand-content",
          "tdExpandedWrapper": "quipucords-table__td-expand-wrapper",
          "tdSelect": "quipucords-table__td-select",
          "th": "quipucords-table__th",
          "tr": "quipucords-table__tr",
          "trExpand": "quipucords-table__tr-expand",
          "trExpanded": "quipucords-table__tr-expand-expanded",
          "trExpandedContent": "quipucords-table__tr-expand-content",
        }
      }
      isBorders={true}
      isHeader={false}
      onExpand={[Function]}
      onSelect={[Function]}
      onSort={null}
      rows={Array []}
      summary={null}
      variant="compact"
    >
      <ScansEmptyState
        getScansSources={[Function]}
        history={Object {}}
        sourcesCount={0}
        sourcesExist={false}
        t={[Function]}
        uiShortName="Quipucords"
        viewId="scans"
      />
    </Table>
  </div>
</div>
`;

exports[`Scans Component should return an empty state when there are no scans: empty state 1`] = `
<div
  class="quipucords-view-container"
>
  <div
    class="quipucords-list-container"
  >
    <div
      class="pf-l-grid"
    >
      <div
        class="pf-l-grid__item pf-m-12-col"
      >
        <div
          class="pf-c-empty-state pf-m-lg quipucords-empty-state"
        >
          <div
            class="pf-c-empty-state__content"
          >
            <svg
              aria-hidden="true"
              class="pf-c-empty-state__icon"
              fill="currentColor"
              height="1em"
              role="img"
              style="vertical-align:-0.125em"
              viewBox="0 0 1024 1024"
              width="1em"
            >
              <path
                d="M576,303 C576,294.715729 569.284271,288 561,288 L463,288 C454.715729,288 448,294.715729 448,303 L448,448 L303,448 C294.715729,448 288,454.715729 288,463 L288,561 C288,569.284271 294.715729,576 303,576 L448,576 L448,720.9 C447.983373,729.207373 454.6927,735.961429 463,736 L561,736 C569.3073,735.961429 576.016627,729.207373 576,720.9 L576,576 L721,576 C724.969024,576.026638 728.784638,574.468589 731.600595,571.671405 C734.416553,568.87422 736.000031,565.069113 736.000031,561.1 L736.000031,463.1 C736.016627,454.792627 729.3073,448.038571 721,448 L576,448 L576,303 Z M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 Z M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0 Z"
              />
            </svg>
            <h1
              class="pf-c-title pf-m-2xl"
              data-ouia-component-id="OUIA-Generated-Title-1"
              data-ouia-component-type="PF4/Title"
              data-ouia-safe="true"
            >
              t(view.empty-state_title, {"context":"scans","count":0,"name":"Quipucords"})
            </h1>
            <div
              class="pf-c-empty-state__body"
            >
              t(view.empty-state_description, {"context":"scans","count":0})
            </div>
            <div
              class="pf-c-empty-state__primary"
            >
              <button
                aria-disabled="false"
                class="pf-c-button pf-m-primary"
                data-ouia-component-id="OUIA-Generated-Button-primary-1"
                data-ouia-component-type="PF4/Button"
                data-ouia-safe="true"
                type="button"
              >
                t(view.empty-state_label, {"context":"source-navigate","count":0})
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
